//group = 'com.taobao.android.atlasdemo'
//version = getEnvValue("versionName","1.0.0");
//def apVersion = getEnvValue("apVersion","");
apply plugin: 'com.taobao.android.emas'
apply from: 'common.gradle'
//apply from: 'dexPatchWraper.gradle'
group = 'com.alibaba.emas'
version = android.defaultConfig.versionName + '-SNAPSHOT'

//TODO do this in plugin
configurations {
    providedCompile
    all*.exclude group: 'com.android.support', module: 'multidex'
}

configurations.all {
    resolutionStrategy {
        cacheChangingModulesFor(0, 'SECONDS')
        cacheChangingModulesFor 0, 'seconds'
        force "com.google.android:support-v4:21.0.2";
    }
}

android {
    compileSdkVersion 26
    buildToolsVersion "26.0.2"

    compileOptions.encoding = 'UTF-8'

    defaultConfig {
        multiDexEnabled true
        applicationId 'com.emas.demo'
        ndk {
            abiFilters "x86", "armeabi"  //默认只启用x86,armeabi
        }
        resConfigs "en", "fr"
    }

    dexOptions {
        jumboMode = true
        preDexLibraries = true
        javaMaxHeapSize = '2048m'
    }

    buildTypes {
        debug {
            // debug模式
            multiDexEnabled true
        }

        release {
            multiDexEnabled true
            shrinkResources false
            // 是否进行混淆
            minifyEnabled true
            proguardFile 'proguard.cfg'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}

task wrapper(type: Wrapper) {
    gradleVersion = '2.12'
    distributionUrl = 'http://services.gradle.org/distributions/gradle-2.12-all.zip'
}

tasks.whenTaskAdded { task ->
    if (task.name.contains("DebugAndroidTest")) {
        task.setEnabled(false);
    }
}

//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/common.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-repo.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-env.gradle'
//apply from: 'http://gitlab.alibaba-inc.com/mhub-android-bootstrap/gradlescript/raw/master/mhub-dep.gradle'


apply plugin: 'maven'
apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            artifact "${project.buildDir}/outputs/apk/${project.name}-debug.ap"
            artifactId "AP-debug"
        }
    }
}

publishing {

    publications {
        maven(MavenPublication) {
            if (components.hasWithName("java")) {
                from components.java
            } else if (components.hasWithName("android")) {
                from components.android
            } else {
                artifact  "${project.buildDir}/outputs/aar/${project.name}-release.aar"

                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    configurations.compile.allDependencies.each {
                        if (it.group != null && (it.name != null || "unspecified" == it.name) && it.version != null) {

                            def dependencyNode = dependenciesNode.appendNode('dependency')
                            dependencyNode.appendNode('groupId', it.group)
                            dependencyNode.appendNode('artifactId', it.name)
                            dependencyNode.appendNode('version', it.version)
                        }
                    }
                }
            }
        }
    }

    repositories {
        if (version.endsWith("-SNAPSHOT")) {
            maven {
                url "http://10.125.65.140:8081/nexus/content/repositories/snapshots"
                credentials {
                    username = "admin"
                    password = "admin123"
                }
            }
        } else {
            maven {
                url "http://10.125.65.140:8081/nexus/content/repositories/releases"
                credentials {
                    username = "admin"
                    password = "admin123"
                }
            }
        }

    }
}